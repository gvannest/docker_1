version: "3.7"

services:

    flask:
        build: 
            context: ./python
            dockerfile: Dockerfile
        image: flask_img:0.1
        container_name: flask_app
        restart: always
        environment:
            - APP_NAME=MyFlaskApp
        env_file:
            - .env
        volumes:
            - appdata:/var/www
        depends_on:
            - mongodb
        expose:
            - 5000
        networks:
            - frontend
            - backend

    mongodb:
        image: mongo:latest
        container_name: mongodb
        restart: always
        volumes:
            - mongodb_data:/data/db
            - ./database/create_app_db/:/docker-entrypoint-initdb.d/
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
            - APP_MONGO_HOST=${MONGO_HOST}
            - MONGO_PORT=${MONGO_PORT}
            - MONGO_ROOT_USER=${MONGO_ROOT_USERNAME}
            - MONGO_ROOT_PASS=${MONGO_ROOT_PASSWORD}
            - APP_MONGO_USER=${APP_MONGO_USER}
            - APP_MONGO_PASS=${APP_MONGO_PASS}
            - APP_MONGO_DB=${APP_MONGO_DB}
        networks:
            - backend


    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        image: nginx_img
        container_name: nginx_webserver
        restart: always
        volumes:
            - nginxdata:/var/log/nginx
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - flask
        networks:
            - frontend

networks:
    frontend:
    backend:

volumes:
    mongodb_data:
        driver: local
    appdata:
        driver: local
    nginxdata:
        driver: local
